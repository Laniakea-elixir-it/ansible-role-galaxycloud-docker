---
# Prerequisites installation recipe
# Install OS dependencies, create directories, logrotate and password generator installation.
# Compatible with CentOS 7, Ubuntu 16.04 and 14.04

#______________________________________
# Disable Selinux to have services working
- name: Disable Selinux
  selinux:
    policy: targeted
    state: permissive
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat" and ansible_virtualization_type != "docker"

#______________________________________
# CentOS 7

- name: '[EL] Install packages'
  yum:
    name: '{{ item }}'
    state: present
  with_items:
    - git
    - vim
    - wget
    - logrotate
    - cronie
    - lsof
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"

- name: '[EL] Install the Development tools package group'
  yum:
    name: "@Development tools"
    state: latest
    skip_broken: yes # This solve broken dependencies on docker indigodatacloud/centos-sshd
    update_cache: yes
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat" and ansible_version.full >= "2.3.0.0"

-  name: '[EL] Install Development tools group' # This solve broken dependencies on docker indigodatacloud/centos-sshd
   command: 'yum groupinstall -y "Development tools" --skip-broken'
   become_user: root
   become_method: sudo
   when: ansible_os_family == "RedHat" and ansible_version.full < "2.3.0.0"

#______________________________________
# Ubuntu 14.04 and 16.04

- name: '[Ubuntu] Install packages'
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - apt-transport-https
    - software-properties-common
    - git
    - vim
    - wget
    - logrotate
    - build-essential
    - python-apt #needed by apt_repository ansible core module
    - lsof
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

#______________________________________
# Install pip.
# This prevent to install different pip versions.

- name: Check pip
  command: 'pip --version'
  ignore_errors: true
  changed_when: false # read-only task
  register: pip_is_installed

- name: '[EL] install pip'
  yum:
    name: 'python-pip'
    state: present
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat" and pip_is_installed.rc != 0

- name: '[Ubuntu] Install pip'
  apt:
    name: python3-pip
    update_cache: yes
  when: ansible_facts['distribution'] == "Ubuntu"

